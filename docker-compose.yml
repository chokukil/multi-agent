# Cherry AI Streamlit Platform - Docker Compose Configuration
version: '3.8'

services:
  cherry-ai-app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - LLM_PROVIDER=OLLAMA
      - OLLAMA_MODEL=llama3
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/cherry_ai
      - CACHE_ENABLED=true
      - MONITORING_ENABLED=true
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
    depends_on:
      - redis
      - postgres
      - ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # A2A Agents
  data-cleaning-agent:
    image: cherry-ai/data-cleaning-agent:latest
    ports:
      - "8306:8306"
    environment:
      - AGENT_PORT=8306
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  data-loader-agent:
    image: cherry-ai/data-loader-agent:latest
    ports:
      - "8307:8307"
    environment:
      - AGENT_PORT=8307
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  visualization-agent:
    image: cherry-ai/visualization-agent:latest
    ports:
      - "8308:8308"
    environment:
      - AGENT_PORT=8308
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  wrangling-agent:
    image: cherry-ai/wrangling-agent:latest
    ports:
      - "8309:8309"
    environment:
      - AGENT_PORT=8309
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  feature-engineering-agent:
    image: cherry-ai/feature-engineering-agent:latest
    ports:
      - "8310:8310"
    environment:
      - AGENT_PORT=8310
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  sql-database-agent:
    image: cherry-ai/sql-database-agent:latest
    ports:
      - "8311:8311"
    environment:
      - AGENT_PORT=8311
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/cherry_ai
    depends_on:
      - postgres
    restart: unless-stopped

  eda-tools-agent:
    image: cherry-ai/eda-tools-agent:latest
    ports:
      - "8312:8312"
    environment:
      - AGENT_PORT=8312
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  h2o-ml-agent:
    image: cherry-ai/h2o-ml-agent:latest
    ports:
      - "8313:8313"
    environment:
      - AGENT_PORT=8313
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  mlflow-tools-agent:
    image: cherry-ai/mlflow-tools-agent:latest
    ports:
      - "8314:8314"
    environment:
      - AGENT_PORT=8314
      - REDIS_URL=redis://redis:6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - redis
      - mlflow
    restart: unless-stopped

  pandas-hub-agent:
    image: cherry-ai/pandas-hub-agent:latest
    ports:
      - "8315:8315"
    environment:
      - AGENT_PORT=8315
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  # Infrastructure Services
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cherry_ai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0

  mlflow:
    image: python:3.11-slim
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://postgres:password@postgres:5432/cherry_ai
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    depends_on:
      - postgres
    restart: unless-stopped
    command: >
      bash -c "
        pip install mlflow psycopg2-binary &&
        mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://postgres:password@postgres:5432/cherry_ai --default-artifact-root /mlflow/artifacts
      "

  # Monitoring and Observability
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped

  # Load Balancer (for scaling)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - cherry-ai-app
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  ollama_data:
  mlflow_artifacts:
  prometheus_data:
  grafana_data:

networks:
  default:
    driver: bridge