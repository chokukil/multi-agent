apiVersion: apps/v1
kind: Deployment
metadata:
  name: cherry-ai-platform
  namespace: cherry-ai
  labels:
    app: cherry-ai-platform
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: cherry-ai-platform
  template:
    metadata:
      labels:
        app: cherry-ai-platform
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8501"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: cherry-ai-platform
        image: cherry-ai/platform:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8501
          name: http
          protocol: TCP
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: STREAMLIT_SERVER_HEADLESS
          value: "true"
        - name: STREAMLIT_SERVER_PORT
          value: "8501"
        - name: STREAMLIT_SERVER_ADDRESS
          value: "0.0.0.0"
        - name: CHERRY_AI_ENV
          value: "production"
        - name: REDIS_URL
          value: "redis://cherry-ai-redis:6379"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: cherry-ai-secrets
              key: postgres-url
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi" 
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: app-data
          mountPath: /app/data
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-config
        configMap:
          name: cherry-ai-config
      - name: app-data
        persistentVolumeClaim:
          claimName: cherry-ai-data-pvc
      - name: app-logs
        persistentVolumeClaim:
          claimName: cherry-ai-logs-pvc
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cherry-ai-platform
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: cherry-ai-platform-service
  namespace: cherry-ai
  labels:
    app: cherry-ai-platform
spec:
  type: ClusterIP
  ports:
  - port: 8501
    targetPort: 8501
    protocol: TCP
    name: http
  selector:
    app: cherry-ai-platform
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cherry-ai-platform-hpa
  namespace: cherry-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cherry-ai-platform
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60