                # 데이터가 없으면 기본 데이터 찾기
                if df is None:
                    available_data = data_manager.list_dataframes()
                    if available_data:
                        first_data_id = available_data[0]
                        df = data_manager.get_dataframe(first_data_id)
                        logger.info(f"📊 기본 데이터 사용: {first_data_id}")
                        
                        # 세션 생성
                        current_session_id = session_data_manager.create_session_with_data(
                            data_id=first_data_id,
                            data=df,
                            user_instructions=user_instructions
                        )
                        env_info = session_data_manager.prepare_ai_ds_team_environment(current_session_id)
                
                if df is not None:
                    # AI DS Team EDA 에이전트 실제 실행
                    logger.info("🚀 AI DS Team EDA 에이전트 실행 중...")
                    
                    try:
                        # EDA 실행
                        result = self.agent.invoke_agent(
                            user_instructions=user_instructions,
                            data_raw=df
                        )
                        
                        # 결과 처리
                        if isinstance(result, dict):
                            result_text = json.dumps(result, ensure_ascii=False, indent=2)
                        else:
                            result_text = str(result)
                        
                        response_text = f"""## 🔍 EDA 분석 완료

✅ **세션 ID**: {current_session_id}
✅ **데이터**: {data_reference.get('data_id', 'default') if data_reference else 'default'}
✅ **형태**: {df.shape[0]:,} 행 × {df.shape[1]:,} 열
✅ **AI DS Team 환경**: 준비 완료

### 📊 분석 결과

{result_text}

### 🎯 분석 완료
AI DS Team EDA 에이전트가 성공적으로 데이터 분석을 완료했습니다.
"""
                        
                        await task_updater.update_status(
                            TaskState.completed,
                            message=new_agent_text_message(response_text)
                        )
                        
                    except Exception as eda_error:
                        logger.error(f"❌ AI DS Team EDA 실행 오류: {eda_error}")
                        await task_updater.update_status(
                            TaskState.failed,
                            message=new_agent_text_message(f"EDA 분석 실행 오류: {str(eda_error)}")
                        )
                else:
                    response_text = "❌ 요청된 데이터를 찾을 수 없습니다. 먼저 데이터를 업로드해주세요." 