[project]
name = "cherryai"
version = "0.1.0"
description = "CherryAI - A2A MCP Data Science Platform"
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "a2a-sdk>=0.2.9",
    "fastmcp>=1.0",
    "mcp[cli]>=1.5.0",
    "httpx>=0.28.1",
    "networkx>=3.4.2",
    "pydantic>=2.11.4",
    "click>=8.1.8",
    "nest-asyncio>=1.6.0",
    "google-generativeai>=0.8.5",
    "langchain-google-genai>=2.0.10",
    "langchain-mcp-adapters>=0.0.9",
    "uvicorn>=0.23.0",
    "fastapi>=0.104.0",
    "ydata-profiling>=4.6.0",
    "matplotlib>=3.1.3",
    "scipy>=1.3.2",
    "jinja2>=2.11.1",
    "tqdm>=4.43.0",
    "langchain>=0.3.26",
    "langchain-community>=0.3.26",
    "langchain-experimental>=0.3.4",
    "langchain-openai>=0.3.25",
    "langchain-text-splitters>=0.3.8",
    "langgraph>=0.4.8",
    "langgraph-checkpoint>=2.1.0",
    "scikit-learn>=1.7.0",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.4",
    "streamlit-ace>=0.1.1",
    "streamlit-mermaid>=0.3.0",
    "mlflow>=3.1.0",
    "h2o>=3.46.0.7",
    "catboost>=1.2.8",
    "lightgbm>=4.6.0",
    "xgboost>=3.0.2",
    "openai>=1.90.0",
    "ollama>=0.5.1",
    "openpyxl>=3.1.5",
    "missingno>=0.5.2",
    "tabulate>=0.9.0",
    "ipython>=9.3.0",
    "joblib>=1.5.1",
    "patsy>=1.0.1",
    "flask>=3.1.1",
    "gunicorn>=23.0.0",
    "sqlalchemy>=2.0.41",
    "langfuse==2.60.8",
    "beautifulsoup4>=4.13.4",
    "playwright>=1.53.0",
    "pytest-playwright>=0.7.0",
    "flask-cors>=6.0.1",
    "langchain-ollama>=0.3.4",
    "sentence-transformers>=5.0.0",
    "faiss-cpu>=1.11.0",
    "aiofiles>=24.1.0",
    "streamlit-extras>=0.7.5",
    "pytest-asyncio>=1.0.0",
    "selenium>=4.34.2",
    "webdriver-manager>=4.0.2",
    "chardet>=5.2.0",
    "superclaude>=3.0.0.2",
    "numpy==2.0.1",
    "pandas==2.2.2",
]

[project.scripts]
cherryai-mcp = "a2a_mcp_registry:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=1.0.0",
    "pytest-xprocess",
    "requests",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "ruff>=0.1.0",  # Python 3.11 최적화 린터
]
advanced-ml = [
    "imbalanced-learn>=0.11.0",
    "pingouin>=0.5.0",
    "mlxtend>=0.23.0",
    "umap-learn>=0.5.0",
    "shap>=0.45.0",
    "lime>=0.2.0",
    "optuna>=3.5.0",
    "scikit-learn>=1.5.1",
    "plotly>=5.23.0",
]
monitoring = [
    "langsmith>=0.0.87",
    "wandb>=0.16.0",
]

[tool.hatch.build.targets.wheel]
packages = ["core", "ui", "a2a_ds_servers", "a2a_mcp_registry"]

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "ui*", "mcp_servers*", "a2a_servers*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
pythonpath = [
  "."
]

# uv 지원 설정
[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=1.0.0",
    "pytest-xprocess",
    "requests",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "ruff>=0.1.0",
]

# Python 3.11 최적화 설정
[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "D", "UP", "ANN", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]

[tool.black]
target-version = ["py311"]
line-length = 88
